# yaml-language-server: $schema=https://json-schema.org/draft/2020-12/output/schema
valid: true
$id: https://theboard.tech/draft/mercury/schema
description: A schema for validating mercury config files
type: object
version: 0.0.5
title: Mercury Specification
properties:
  Functions:
    id: "#/properties/Functions"
    description: All functions go here
    type: object
    patternProperties:
      ^[a-zA-Z._-]+$:
        $ref: "#/$defs/function"
additionalProperties: false
$defs:
  function:
    description: An individual function within the Mercury hierarchy
    id: "#/$defs/function"
    type: object
    properties:
      Name:
        description: NOTYETWRITTEN
        type: string
      DataRoot:
        description: NOTYETWRITTEN
        type: string
      Tables:
        description: NOTYETWRITTEN
        patternProperties:
          ^[a-zA-Z_-]+$:
            $ref: "#/$defs/table"
        additionalProperties: false
      Method:
        description: NOTYETWRITTEN
        oneOf:
          - $ref: "#/$defs/method"
          - type: array
            items:
              $ref: "#/$defs/method"
      Parameters:
        description: A list of the relevant parameters
        type: object
        patternProperties:
          ^[a-zA-Z_]+$:
            $ref: "#/$defs/parameter"
        additionalProperties: false
      Query:
        anyOf:
          - type: object
            properties:
              Type:
                type: string
                enum:
                  - SELECT
                  - UPDATE
                  - INSERT
              Override:
                type: string
            oneOf:
              - required:
                  - Type
              - required:
                  - Override
            additionalProperties: false
    required:
      - DataRoot
      - Tables
      - Method
      - Parameters
    additionalProperties: false
  method:
    description: A string (in all caps) representing an HTTP method
    type: string
    enum:
      - GET
      - POST
      - PUT
      - PATCH
      - DELETE

  #---Tables---#
  table:
    description: NOTYETWRITTEN
    type: object
    properties:
      Join:
        description: when you need to join multiple tables together
        type: object
        $ref: "#/$defs/join_object"
      Name:
        type: string
        description: The name of the table in the database
      Alias:
        type: string
        description: The alias of the table for use in the query
      Default:
        type: boolean
        description: If a function doesn't specify a table, then use this one
    additionalProperties: false

  join_object:
    description: Not Yet Implemented
    type: object
    properties:
      #if Alias omitted, f'{Left.name}_{Right.name}
      Alias:
        type: string
      Left:
        description: Column in Left Table
        oneOf:
          - type: string
          - type: object
            properties:
              Join:
                $ref: "#/$defs/join_object"
            additionalProperties: false
      Right:
        description: Column in Right Table

        oneOf:
          - type: string
          - type: object
            properties:
              Join:
                $ref: "#/$defs/join_object"
            additionalProperties: false
      How:
        description: | 
          LEFT|RIGHT|INNER|OUTER
          Must also have `On` tag 
        type: string
        enum: 
              - LEFT
              - RIGHT
              - INNER
              - OUTER
      On:
        oneOf:
          - $ref: "#/$defs/condition"
          - $ref: "#/$defs/logical"
        
        additionalProperties: false
    #oneOf:
    allOf:
      - required:
        - Left
        - Right
      - anyOf: 
        - required: 
          - On
          - How
        # If we're missing How, we do an inner join
        - required:
          - On
        # if we're missing On and How, we do a natural join
        - not:
            anyOf:
              - required:
                - On
              - required: 
                - How

    additionalProperties: false

  condition:
    description: Operation on a pair of numeric value. You can provide the names of columns, or you can use numeric constants
    type: object
    properties:
      LeftColumn: 
        anyOf: 
          - type: string
          - type: integer
          - type: float
      RightColumn: 
        anyOf: 
          - type: string
          - type: integer
          - type: float
      Compare: 
        type: string
        enum: 
          - lt 
          - le
          - eq
          - ge
          - gt
    required:
      - LeftColumn
      - RightColumn
      - Compare
    additionalProperties: false
  
  logical:
    type: object
    description: an operation on booleans. And|Or|Not are the options
    properties:
      And:
        $ref: "#/$defs/binarylogical"
      Or:
        $ref: "#/$defs/binarylogical"
      Not:
        $ref: "#/$defs/unarylogical"
    not:
      anyOf:
        - required:
          - And
          - Or
        - required:
          - And
          - Not
        - required:
          - Or
          - Not
    additionalProperties: false

  binarylogical: 
    type: array
    items: 
      anyOf:
        - $ref: "#/$defs/condition" 
        - $ref: "#/$defs/logical"
    minItems: 2 
    maxItems: 2 

  unarylogical: 
    oneOf:
      - $ref: "#/$defs/condition" 
      - $ref: "#/$defs/logical"

  #---Parameters---#
  parameter:
    type: object
    description: A parameter from the payload, passed into the query
    properties:
      Table:
        type: string
      Type:
        $ref: "#/$defs/param_type"
      Name:
        description: A string (in all caps) representing an HTTP method
        type: string
      Source:
        $ref: "#/$defs/param_source"
      Column:
        type: string
      Identifier:
        type: boolean
    required:
      - Type
    additionalProperties: false
  param_type:
    type: object
    description: NOTYETWRITTEN
    properties:
      String:
        oneOf:
          - type: "null"
          - $ref: "#/$defs/param_type_string"
      Integer:
        oneOf:
          - type: "null"
          - $ref: "#/$defs/param_type_integer"
    oneOf:
      - required:
          - String
      - required:
          - Integer
  param_type_integer:
    type: object
    properties:
      Bounds:
        type: object
        properties:
          Lower:
            type: integer
          Upper:
            type: integer
          OnFail:
            $ref: "#/$defs/on_fail"
  param_type_string:
    type: object
    properties:
      Pattern:
        description: "Pattern for string to match. Can be URL, Email, or a regex denoted
          using slash-notation "
        oneOf:
          - type: object
            properties:
              Expression:
                description: NOTYETWRITTEN
                oneOf:
                  - type: string
                    pattern: ^/.*/$
                  - $ref: "#/$defs/predefined_string_patterns"
              OnFail:
                $ref: "#/$defs/on_fail"
            required:
              - Expression
            additionalProperties: false
          - type: string
            pattern: ^/.*/$
          - $ref: "#/$defs/predefined_string_patterns"
      Length:
        description: The lower and upper bounds on the length of the string
        type: object
        properties:
          Lower:
            type: integer
          Upper:
            type: integer
          OnFail:
            $ref: "#/$defs/on_fail"
        anyOf:
          - required:
              - Lower
          - required:
              - Upper
        additionalProperties: false
  param_source:
    type: object
    properties:
      URL:
        description: NEEDS TO BE REIMPLEMENTED TO USE PATH PARAMETERS
        $ref: "#/$defs/param_source_url"
      Payload:
        $ref: "#/$defs/param_source_payload"
    oneOf:
      - required:
          - URL
      - required:
          - Payload
    additionalProperties: false
  param_source_url:
    type: object
    properties:
      PathParam:
        description: Path Parameter
        type: string
      QueryStringParam:
        type: string
    oneOf:
      - required:
          - PathParam
      - required:
          - QueryStringParam
    additionalProperties: false
  param_source_payload:
    description: NOTYETWRITTEN
    type: object
    properties:
      Path:
        description: NOTYETWRITTEN
        type: string
      DataRoot:
        description: NOTYETWRITTEN
        type: boolean
    additionalProperties: false
  on_fail:
    description: NOTYETWRITTEN
    type: object
    properties:
      Code:
        description: |
          Error code associated with this failure case, 
          defaults to 400
        type: integer
      Message:
        description: |
          Error message associated with this failure case,
          defaults to empty string 
        type: string
    additionalProperties: false
  predefined_string_patterns:
    type: string
    enum:
      - URL
      - Email
  string_or_list:
    oneOf:
      - type: string
      - $ref: "#/$defs/list_of_strings"
  list_of_strings:
    type: array
    items:
      type: string
    uniqueItems: true
